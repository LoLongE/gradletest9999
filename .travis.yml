language: java
jdk:
  - openjdk8

branches:
  only:
    - master

# Travis CI 서버의 Cache 활성화
cache:
  directories:
    - '$HOME/.m2/repository'
    - '$HOME/.gradle'

before_install:
    - chmod +x gradlew

# clean 후 Build (Build시 자동으로 test 수행)
script: "./gradlew clean build"

before_deploy: # 배포하기전 하는 작업들
  - rm -rf node_modules 
  - zip -r DProject * 
  - mkdir -p deploy # deploy 라는 디렉터리를 만듬
  - mv DProject.zip deploy/DProject.zip # deploy 디렉터리로 node-koa-server.zip 파일을 이동
deploy: # 배포
  - provider: s3 # AWS S3를 의미
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: lolong-deploy # S3에 생성한 버킷
    region: ap-northeast-2
    skip_cleanup: true 
    local_dir: deploy # deploy 디렉터리에 있는 파일을 s3로 업로드 하겠다는 의미
    wait-until-deployed: true
    on:
      repo: LoLongE/gradletest9999 #Github 주소
      branch: master
  - provider: codedeploy # AWS CodeDeploy를 의미
    access_key_id: $AWS_ACCESS_KEY # Travis repo settings에 설정된 값
    secret_access_key: $AWS_SECRET_KEY # Travis repo settings에 설정된 값
    bucket: lolong-deploy # AWS CodeDeploy가 다운로드 받은 버킷
    key: DProject.zip # 해당 버킷에 저장되어 있는 파일 이름
    bundle_type: zip # 버킷에 저장되어 있는 파일의 확장자
    application: 	lolong-deploy-service # AWS 배포 애플리케이션
    deployment_group: lolong-deploy-group # AWS 배포 애플리케이션에 만들어져 있는 배포 그룹
    region: ap-northeast-2
    wait-until-deployed: true
    on:
      repo: LoLongE/gradletest9999
      branch: master